{"version":3,"file":"static/webpack/static/development/pages/campaigns/requests.js.b661ed00c4e511a66b17.hot-update.js","sources":["webpack:///./pages/campaigns/requests/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../../components/layout';\nimport { Link } from '../../../routes';\nimport { Button, Table } from 'semantic-ui-react';\nimport Campaign from \"../../../ethereum/campaign\";\nimport RequestRow from '../../../components/RequestRow';\n\nexport default class RequestsIndex extends Component {\n\tstatic async getInitialProps(props) {\n\t\tconst {address} = props.query;\n\t\tconst campaign = Campaign(address);\n\t\tconst requestCount = await campaign.methods.getRequestsCount().call();\n\t\tconst approversCount = await campaign.methods.approversCount().call()\n\t\tconst requests = await Promise.all(\n\t\t\tArray(parseInt(requestCount)).fill().map((e, i) => {\n\t\t\t\treturn campaign.methods.requests(i).call()\n\t\t\t})\n\t\t);\n\n\t\treturn { address, requests, requestCount, approversCount };\n\t}\n\n\trenderRows() {\n\t\treturn this.props.requests.map((request, index) => {\n\t\t\treturn (\n\t\t\t\t<RequestRow\n\t\t\t\t\tkey={index}\n\t\t\t\t\tid={index}\n\t\t\t\t\trequest={request}\n\t\t\t\t\taddress={this.props.address}\n\t\t\t\t\tapproversCount={this.props.approversCount}\n\t\t\t\t/>\n\t\t\t);\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { Header, Row, HeaderCell, Body } = Table;\n\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<h3>Request Index</h3>\n        <Link route={`/campaigns/${this.props.address}/requests/new`}>\n          <a>\n            <Button primary>View Requests</Button>\n          </a>\n        </Link>\n        <Table>\n        \t<Header>\n        \t\t<Row>\n        \t\t\t<HeaderCell>ID</HeaderCell>\n        \t\t\t<HeaderCell>Description</HeaderCell>\n        \t\t\t<HeaderCell>Amount (ether)</HeaderCell>\n        \t\t\t<HeaderCell>Recipient Address</HeaderCell>\n        \t\t\t<HeaderCell>Approval Count</HeaderCell>\n        \t\t\t<HeaderCell>Approve</HeaderCell>\n        \t\t\t<HeaderCell>Finalize</HeaderCell>\n        \t\t</Row>\n        \t</Header>\n          <Body>{this.renderRows()}</Body>\n        </Table>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAeA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAEA;AAAA;AAmBA;;;;;;AAvDA;;;;;;AACA;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AAEA;AACA;AACA;;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAbA;AACA;;;;;A","sourceRoot":""}