{"version":3,"file":"static/webpack/static/development/pages/campaigns/requests/new.js.a0806c4d253614cf7d56.hot-update.js","sources":["webpack:///./pages/campaigns/requests/new.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../../components/layout';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport web3 from '../../../ethereum/web3';\nimport Campaign from '../../../ethereum/campaign';\nimport {Link, Router} from '../../../routes';\n\nexport default class RequestNew extends Component {\n  state = {\n    value: '',\n    description: '',\n    recipient: '',\n    loading: false,\n    errorMessage: '',\n    success: false\n  };\n\n\tstatic async getInitialProps(props) {\n\t\tconst {address} = props.query;\n\t\treturn {address};\n\t}\n\n\tonSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tconst campaign = Campaign(this.props.address);\n\t\tconst {description, value, recipient} = this.state;\n\n\t\tthis.setState({errorMessage: '', loading: true, success: false});\n\n\t\ttry {\n\t\t\tconst accounts = await web3.eth.getAccounts();\n\t\t\tawait campaign.methods.createRequest(\n\t\t\t\tdescription, \n\t\t\t\tweb3.utils.toWei(value, 'ether'),\n\t\t\t\trecipient\n\t\t\t).send({\n\t\t\t\tfrom: accounts[0]\n\t\t\t});\n\t\t}\tcatch(err) {\n\t\t\tthis.setState({errorMessage: err.message});\n\t\t}\t\n\t\tthis.setState({loading: false, description: '', value: '', recipient: '', success: true});\n    setTimeout(() => {this.setState({success: false})}, 3000);\n\t}\n\n\trender() {\n\t\treturn (\n      <Layout>\n        <Link route={`/campaigns/${this.props.address}/requests`}>\n          <a>Back</a>\n        </Link>\n        <h3>Create a Request</h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>Description</label>\n            <Input\n              value={this.state.description}\n              onChange={event =>\n                this.setState({ description: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Value in Ether</label>\n            <Input\n              value={this.state.value}\n              onChange={event => this.setState({ value: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Recipient</label>\n            <Input\n              value={this.state.recipient}\n              onChange={event =>\n                this.setState({ recipient: event.target.value })}\n            />\n          </Form.Field>\n\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\n          <Transition visible={this.state.success} duration={'2000'}>\n            <Message success header='Success!' content='Request has been created'/>\n          </Transition>\n          <Button primary loading={this.state.loading}>\n            Create!\n          </Button>\n        </Form>\n      </Layout>\n\t\t);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;;;;;;AAaA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAQA;AARA;AAAA;AAcA;AADA;AACA;AAdA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AACA;AAlBA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAsBA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AASA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAMA;;;;;;AAxEA;;;;;;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAbA;AACA;;;;;A","sourceRoot":""}