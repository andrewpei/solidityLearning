{"version":3,"file":"static/webpack/static/development/pages/campaigns/requests.js.0630f0702684360b0ad6.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/core-js/library/fn/parse-int.js","webpack:///./node_modules/core-js/library/modules/_parse-int.js","webpack:///./node_modules/core-js/library/modules/_string-trim.js","webpack:///./node_modules/core-js/library/modules/_string-ws.js","webpack:///./node_modules/core-js/library/modules/es6.parse-int.js","webpack:///./pages/campaigns/requests/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/parse-int\");","require('../modules/es6.parse-int');\nmodule.exports = require('../modules/_core').parseInt;\n","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n","import React, { Component } from 'react';\nimport Layout from '../../../components/layout';\nimport { Link } from '../../../routes';\nimport { Button } from 'semantic-ui-react';\nimport Campaign from \"../../../ethereum/campaign\";\n\nexport default class RequestsIndex extends Component {\n\tstatic async getInitialProps(props) {\n\t\tconst {address} = props.query;\n\t\tconst campaign = Campaign(address);\n\t\tconst requestCount = await campaign.methods.getRequestsCount().call();\n\n\t\tconst requests = await Promise.all(\n\t\t\tArray(parseInt(requestCount)).fill().map((e, i) => {\n\t\t\t\treturn campaign.methods.requests(i).call()\n\t\t\t})\n\t\t);\n\n\t\treturn { address, requests, requestCount };\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<h3>Request Index</h3>\n          <Link route={`/campaigns/${this.props.address}/requests/new`}>\n            <a>\n              <Button primary>View Requests</Button>\n            </a>\n          </Link>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAeA;AACA;AAGA;AAAA;AAEA;AAAA;AAKA;;;;;;AAzBA;;;;;;AACA;AACA;;AACA;AACA;;AADA;;AAEA;AAEA;AACA;AACA;;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAbA;AACA;;;;;A","sourceRoot":""}